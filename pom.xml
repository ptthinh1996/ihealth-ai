<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <!-- ==================================================================================================== -->
    <!-- PROJECT -->
    <!-- ==================================================================================================== -->

    <modelVersion>4.0.0</modelVersion>

    <groupId>com.ihealth.ai</groupId>
    <artifactId>ihealth</artifactId>
    <version>1.0.0</version>
    <packaging>jar</packaging>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.4.1.RELEASE</version>
    </parent>

    <name>iHealth</name>
    <description>
        A system that helps merchants sell vouchers.
    </description>

    <!-- ==================================================================================================== -->
    <!-- PROPERTIES -->
    <!-- ==================================================================================================== -->

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <springboot.version>1.4.1.RELEASE</springboot.version>
        <hibernate.version>5.0.9.Final</hibernate.version>
        <apache.common.lang.version>3.4</apache.common.lang.version>
        <apache.common.csv.version>1.4</apache.common.csv.version>
        <poi.version>3.17</poi.version>
        <mysql.connector.version>6.0.6</mysql.connector.version>

        <version.findbugs>3.0.0</version.findbugs>
        <phase_id.compile.findbugs>compile: findbugs</phase_id.compile.findbugs>
        <phase_id.test_compile.findbugs>test-compile: findbugs</phase_id.test_compile.findbugs>
        <phase.compile.findbugs>compile</phase.compile.findbugs>
        <phase.test_compile.findbugs>test-compile</phase.test_compile.findbugs>
        <findbugs.check.skip>false</findbugs.check.skip>
        <findbugs.report.skip>false</findbugs.report.skip>
        <findbugs.failOnError>false
        </findbugs.failOnError>                                        <!-- If true, and errors are found, fails the build -->
        <findbugs.excludeBugsFile/>                                                               <!-- Comma separated list of files containing bugs to ignore -->
        <findbugs.excludeFilterFile/>                                                             <!-- Comma separated list of files containing filters (bugs/classes) to ignore -->
        <findbugs.includeFilterFile/>                                                             <!-- Comma separated list of files containing filters (bugs/classes) to report -->
        <findbugs.includeTests>true
        </findbugs.includeTests>                                       <!-- If true, analysis is run on test classes as well -->
        <findbugs.effort>Max</findbugs.effort>                                                    <!-- Enables analysis which takes more memory but finds more bugs. If you
			run out of memory, change the value of the effort element to 'Min' or 'Default'. -->
        <findbugs.threshold>Medium
        </findbugs.threshold>                                           <!-- Reports all bugs (values are Low, Medium and Max) -->
        <findbugs.xmlOutput>true
        </findbugs.xmlOutput>                                             <!-- Produces XML output -->
        <findbugs.outputDirectory>${project.build.directory}/findbugs
        </findbugs.outputDirectory>  <!-- Directory in which the XML report is created -->

        <version.jacoco>0.7.2.201409121644</version.jacoco>
        <phase_id.initialize.jacoco_prepare_agent_ut>initialize:
            jacoco-prepare-agent (UT)
        </phase_id.initialize.jacoco_prepare_agent_ut>
        <phase_id.prepare-package.jacoco_report_check_ut>prepare-package:
            jacoco-report/check (UT)
        </phase_id.prepare-package.jacoco_report_check_ut>
        <phase_id.pre-integration-test.jacoco_prepare_agent_it>pre-integration-test:
            jacoco-prepare-agent (IT)
        </phase_id.pre-integration-test.jacoco_prepare_agent_it>
        <phase_id.post-integration-test.jacoco_report_it>post-integration-test:
            jacoco-report (IT)
        </phase_id.post-integration-test.jacoco_report_it>
        <phase_id.verify.jacoco_merge_report>verify: jacoco-merge/report</phase_id.verify.jacoco_merge_report>
        <phase_id.site.jacoco_report>site: jacoco-report</phase_id.site.jacoco_report>
        <phase.initialize.jacoco_prepare_agent_ut>initialize</phase.initialize.jacoco_prepare_agent_ut>
        <phase.prepare-package.jacoco_report_check_ut>prepare-package</phase.prepare-package.jacoco_report_check_ut>
        <phase.pre-integration-test.jacoco_prepare_agent_it>pre-integration-test
        </phase.pre-integration-test.jacoco_prepare_agent_it>
        <phase.post-integration-test.jacoco_report_it>post-integration-test
        </phase.post-integration-test.jacoco_report_it>
        <phase.verify.jacoco_merge_report>verify</phase.verify.jacoco_merge_report>
        <phase.site.jacoco_report>site</phase.site.jacoco_report>
        <jacoco.exclude.0>**/*Application.class</jacoco.exclude.0>
        <jacoco.exclude.1>**/common/**</jacoco.exclude.1>
        <jacoco.exclude.2>**/core/**</jacoco.exclude.2>
        <jacoco.exclude.3>**/rest/**</jacoco.exclude.3>
        <jacoco.exclude.4>**/task/**</jacoco.exclude.4>
        <jacoco.exclude.5>**/core/*</jacoco.exclude.5>
        <jacoco.exclude.6>**/controller/**</jacoco.exclude.6>
        <jacoco.exclude.7>**/service/model/*</jacoco.exclude.7>
        <jacoco.exclude.8>**/persistence/*</jacoco.exclude.8>
        <jacoco.exclude.9>**/gateway/*</jacoco.exclude.9>
        <jacoco.check.skip>false</jacoco.check.skip>
        <jacoco.haltOnFailure>false</jacoco.haltOnFailure>
        <jacoco.bundle.complexity.covered_ratio>0.80</jacoco.bundle.complexity.covered_ratio>
        <jacoco.bundle.class.missed.count>0</jacoco.bundle.class.missed.count>
        <jacoco.class.line.covered_ratio>0.80</jacoco.class.line.covered_ratio>
        <report.jacoco.skip>false</report.jacoco.skip>
    </properties>

    <!-- ==================================================================================================== -->
    <!-- DEPENDENCIES -->
    <!-- ==================================================================================================== -->

    <dependencies>
        <!-- Web Server -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <!--spring-boot-starter, spring-boot-starter-tomcat, jackson-databind,
                spring-web, spring-webmvc -->
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                </exclusion>
                <exclusion>
                    <artifactId>jackson-databind</artifactId>
                    <groupId>com.fasterxml.jackson.core</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jetty</artifactId>
            <!-- jetty-webapp, jetty-jsp -->
        </dependency>

        <!--Redis-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>

        <!--Mail-->
        <dependency>
            <groupId>javax.mail</groupId>
            <artifactId>mail</artifactId>
            <version>1.4.7</version>
        </dependency>
        <dependency>
            <groupId>javax.mail</groupId>
            <artifactId>javax.mail-api</artifactId>
            <version>1.5.6</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.sendgrid/sendgrid-java -->
        <dependency>
            <groupId>com.sendgrid</groupId>
            <artifactId>sendgrid-java</artifactId>
            <version>4.2.1</version>
        </dependency>


        <!--Security -->
        <!--<dependency>-->
            <!--<groupId>org.springframework.boot</groupId>-->
            <!--<artifactId>spring-boot-starter-security</artifactId>-->
            <!--&lt;!&ndash;spring-boot-starter, spring-security-config, spring-security-web,-->
                <!--spring-aop, spring-beans, &ndash;&gt;-->
            <!--&lt;!&ndash;spring-context, spring-core, spring-expression, spring-web &ndash;&gt;-->
        <!--</dependency>-->
        <dependency>
            <groupId>org.mindrot</groupId>
            <artifactId>jbcrypt</artifactId>
            <version>0.4</version>
        </dependency>
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt</artifactId>
            <version>0.7.0</version>
        </dependency>


        <!--Service-->
            <!--Caching-->

        <!-- Persistence -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
            <!--spring-boot-starter, spring-jdbc, tomcat-jdbc, spring-tx -->
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>4.3.3.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>${hibernate.version}</version>
        </dependency>
        <!-- 2nd Level Caching -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-ehcache</artifactId>
            <version>${hibernate.version}</version>
        </dependency>
        <!-- datasource management -->
        <dependency>
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP</artifactId>
            <version>2.6.3</version>
        </dependency>

        <!--Database -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>runtime</scope>
        </dependency>


        <!-- Utilities -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${apache.common.lang.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-pool2</artifactId>
            <version>2.0</version>
        </dependency>
        <dependency>
            <groupId>org.modelmapper</groupId>
            <artifactId>modelmapper</artifactId>
            <version>0.7.5</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-csv</artifactId>
            <version>${apache.common.csv.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.jsoup/jsoup -->
        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>1.11.2</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.amazonaws/aws-java-sdk-s3 -->
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-s3</artifactId>
            <version>1.11.197</version>
        </dependency>

        <!-- Test -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <!--spring-boot-starter-logging, spring-boot, junit, mockito-core, hamcrest-library,
                spring-test -->
            <scope>test</scope>
        </dependency>

        <!--latest version of gson is 2.8.1 but caught error with date format, so use 2.8.0 -->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.8.9</version>
        </dependency>
        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
            <version>1.9.3</version>
        </dependency>

        <!--mandrill api-->
        <dependency>
            <groupId>com.mandrillapp.wrapper.lutung</groupId>
            <artifactId>lutung</artifactId>
            <version>0.0.7</version>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>23.0</version>
        </dependency>
        <!--Monitoring -->
        <!--Uncomment this when deploying -->
        <!--<dependency>-->
        <!--<groupId> org.springframework.boot</groupId>-->
        <!--<artifactId>spring-boot-actuator</artifactId>-->
        <!--</dependency>-->


        <!--Spring Boot Tools for Faster Development -->
        <!--<dependency> -->
        <!--<groupId>org.springframework.boot</groupId> -->
        <!--<artifactId>spring-boot-devtools</artifactId> -->
        <!--<optional>true</optional> -->
        <!--</dependency> -->
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <version>${poi.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-scratchpad</artifactId>
            <version>${poi.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>${poi.version}</version>
        </dependency>

    </dependencies>

    <!-- ==================================================================================================== -->
    <!-- BUILD -->
    <!-- ==================================================================================================== -->

    <build>
        <plugins>
            <!--findbugs -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>${version.findbugs}</version>
                <configuration>
                    <skip>${findbugs.check.skip}</skip>
                    <failOnError>${findbugs.failOnError}</failOnError>
                    <excludeBugsFile>${findbugs.excludeBugsFile}</excludeBugsFile>
                    <excludeFilterFile>${findbugs.excludeFilterFile}</excludeFilterFile>
                    <includeFilterFile>${findbugs.includeFilterFile}</includeFilterFile>
                    <includeTests>${findbugs.includeTests}</includeTests>
                    <effort>${findbugs.effort}</effort>
                    <threshold>${findbugs.threshold}</threshold>
                    <xmlOutput>${findbugs.xmlOutput}</xmlOutput>
                    <findbugsXmlOutputDirectory>${findbugs.outputDirectory}</findbugsXmlOutputDirectory>
                </configuration>

                <executions>
                    <execution>
                        <id>${phase_id.compile.findbugs}</id>
                        <phase>${phase.compile.findbugs}</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>${phase_id.test_compile.findbugs}</id>
                        <phase>${phase.test_compile.findbugs}</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--jacoco -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${version.jacoco}</version>
                <configuration>
                    <skip>${report.jacoco.skip}</skip>
                    <haltOnFailure>${jacoco.haltOnFailure}</haltOnFailure>
                    <excludes>
                        <exclude>${jacoco.exclude.0}</exclude>
                        <exclude>${jacoco.exclude.1}</exclude>
                        <exclude>${jacoco.exclude.2}</exclude>
                        <exclude>${jacoco.exclude.3}</exclude>
                        <exclude>${jacoco.exclude.4}</exclude>
                        <exclude>${jacoco.exclude.5}</exclude>
                        <exclude>${jacoco.exclude.6}</exclude>
                        <exclude>${jacoco.exclude.7}</exclude>
                        <exclude>${jacoco.exclude.8}</exclude>
                        <exclude>${jacoco.exclude.9}</exclude>
                    </excludes>
                    <!-- Check configuration used to specify rules on element types (BUNDLE,
                        PACKAGE, CLASS, SOURCEFILE or METHOD) with a list of limits. Each limit applies
                        to a certain counter (INSTRUCTION, LINE, BRANCH, COMPLEXITY, METHOD, CLASS)
                        and defines a minimum or maximum for the corresponding value (TOTALCOUNT,
                        COVEREDCOUNT, MISSEDCOUNT, COVEREDRATIO, MISSEDRATIO). If a limit refers
                        to a ratio the range is from 0.0 to 1.0 where the number of decimal places
                        will also determine the precision in error messages. -->
                    <rules>
                        <rule>
                            <element>BUNDLE</element>
                            <limits>
                                <limit>
                                    <counter>COMPLEXITY</counter>
                                    <value>COVEREDRATIO</value>
                                    <minimum>${jacoco.bundle.complexity.covered_ratio}</minimum>
                                </limit>
                                <limit>
                                    <counter>CLASS</counter>
                                    <value>MISSEDCOUNT</value>
                                    <maximum>${jacoco.bundle.class.missed.count}</maximum>
                                </limit>
                            </limits>
                        </rule>

                        <rule>
                            <element>CLASS</element>
                            <excludes>
                                <exclude>*Test</exclude>
                            </excludes>
                            <limits>
                                <limit>
                                    <counter>LINE</counter>
                                    <value>COVEREDRATIO</value>
                                    <minimum>${jacoco.class.line.covered_ratio}</minimum>
                                </limit>
                            </limits>
                        </rule>
                    </rules>
                </configuration>

                <executions>
                    <!-- Configuration for unit tests -->
                    <execution>
                        <id>${phase_id.initialize.jacoco_prepare_agent_ut}</id>
                        <phase>${phase.initialize.jacoco_prepare_agent_ut}</phase>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <destFile>${project.build.directory}/jacoco-ut.exec</destFile>
                        </configuration>
                    </execution>

                    <execution>
                        <id>${phase_id.prepare-package.jacoco_report_check_ut}</id>
                        <phase>${phase.prepare-package.jacoco_report_check_ut}</phase>
                        <goals>
                            <goal>report</goal>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <skip>${jacoco.check.skip}</skip>
                            <dataFile>${project.build.directory}/jacoco-ut.exec</dataFile>
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
                        </configuration>
                    </execution>

                    <!-- Configuration for integration tests -->
                    <execution>
                        <id>${phase_id.pre-integration-test.jacoco_prepare_agent_it}</id>
                        <phase>${phase.pre-integration-test.jacoco_prepare_agent_it}</phase>
                        <goals>
                            <goal>prepare-agent-integration</goal>
                        </goals>
                    </execution>

                    <execution>
                        <id>${phase_id.post-integration-test.jacoco_report_it}</id>
                        <phase>${phase.post-integration-test.jacoco_report_it}</phase>
                        <goals>
                            <goal>report-integration</goal>
                        </goals>
                    </execution>

                    <!-- Configuration for reporting -->
                    <execution>
                        <id>${phase_id.verify.jacoco_merge_report}</id>
                        <phase>${phase.verify.jacoco_merge_report}</phase>
                        <goals>
                            <goal>merge</goal>
                            <goal>report</goal>
                        </goals>

                        <configuration>
                            <fileSets>
                                <fileSet>
                                    <directory>${project.build.directory}</directory>
                                    <includes>
                                        <include>*.exec</include>
                                    </includes>
                                </fileSet>
                            </fileSets>
                        </configuration>
                    </execution>

                    <execution>
                        <id>${phase_id.site.jacoco_report}</id>
                        <phase>${phase.site.jacoco_report}</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--spring-boot -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>1.4.1.RELEASE</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--  =================================================================================================  -->

            <!--  Flyway Database versioning tool -->
            <plugin>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-maven-plugin</artifactId>
                <version>${flyway.version}</version>
                <configuration>
                    <sqlMigrationSeparator>__</sqlMigrationSeparator>
                    <locations>
                        <location>filesystem:src/main/resources/flyway/migrations</location>
                    </locations>
                    <url>${database.url}</url>
                    <user>${database.user}</user>
                    <password>${databese.password}</password>
                    <encoding>UTF-8</encoding>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>mysql</groupId>
                        <artifactId>mysql-connector-java</artifactId>
                        <version>${mysql.connector.version}</version>
                        <scope>runtime</scope>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>

    <!--  ====================================================================================================  -->
    <!--                                              PROFILES                                                  -->
    <!--  ====================================================================================================  -->

    <profiles>
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <database.url>
                    jdbc:mysql://localhost:3306/ihealth?characterEncoding=UTF-8
                </database.url>
                <database.user>root</database.user>
                <databese.password>admin</databese.password>
            </properties>
        </profile>
    </profiles>
</project>
